const {
  ClientServiceBase,
  StatusCode,
} = require('@scalar-labs/scalardl-javascript-sdk-base');

const protobuf = require('./scalar_pb');
const {LedgerClient, LedgerPrivilegedClient} = require('./scalar_grpc_web_pb');

/**
 * This class inherits ClientServiceBase.
 * It needs to be constructed with LedgerClient
 * and protobuf messages that generated by gRPC tools
 * @class
 */
class ClientService extends ClientServiceBase {
  /**
   * Inject LedgerClient and protobuf messages
   * @constructor
   * @param {Object} properties JSON Object used for setting client properties
   */
  constructor(properties) {
    const host = properties['scalar.dl.client.server.host'];
    const tlsEnabled = properties['scalar.dl.client.tls.enabled'];

    const ledgerClientServiceURL =
      `${tlsEnabled ? 'https' : 'http'}://${host}:${properties['scalar.dl.client.server.port']}`;
    const ledgerPriviledgedClientServiceURL =
      `${tlsEnabled ? 'https' : 'http'}://${host}:${properties['scalar.dl.client.server.privileged_port']}`;

    const services = {
      ledgerClient: new LedgerClient(ledgerClientServiceURL),
      ledgerPrivileged: new LedgerPrivilegedClient(
          ledgerPriviledgedClientServiceURL,
      ),
    };

    super(services, protobuf, properties);
  }
}

module.exports = {
  ClientService,
  StatusCode,
};
