# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
jobs:
  build:
    machine:
      image: ubuntu-2004:202101-01

    working_directory: ~/scalardl-web-client-sdk

    steps:
      - checkout
      # Restore dependencies
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}

      - run:
          name: Docker login
          command: |
            echo ${GHCR_PAT} | docker login https://ghcr.io -u ${GHCR_USERNAME} --password-stdin

      - run: # Update chrome to stable version for karma
          name: Install Chromedriver latest version
          command: |
            wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable

      - run:
          name: checkout scalardl-samples repository as it contains the script to spin up scalardl environment and easier for us to maintain the CI
          command: |
            git init
            git pull https://${GHCR_USERNAME}:${GHCR_PAT}@github.com/scalar-labs/scalardl-samples.git 3.2
          working_directory: .circleci/

      - run:
          name: Spin container via docker compose
          command: docker-compose -f docker-compose.yml -f docker-compose-open-cassandra-port.yml up -d
          working_directory: .circleci/

      - run:
          name: Install node@14.16 # Update node for karma to work
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install v14.16
            nvm alias default v14.16
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV

      - run:
          name: Install npm
          command: npm install

      - run:
          name: Wait for Cassandra to spin up to be able to update the Cassandra schema in the next step
          command: |
            echo -n "Wait for C* "
              until docker exec scalardl-samples-cassandra-1 cqlsh 2> /dev/null ; do
                  sleep 0.5
                  echo -n "#"
              done

      - run:
          name: Insert function table and wait
          command: |
            docker cp function_schema.cql \
            scalardl-samples-cassandra-1:function_schema.cql
            docker exec scalardl-samples-cassandra-1 cqlsh -f function_schema.cql
            sleep 10
          working_directory: .circleci/

      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules

      # run tests
      - run:
          command: npm test

      - run:
          name: Restart Scalar DL environment with auditor
          command: |
            docker-compose -f docker-compose.yml -f docker-compose-open-cassandra-port.yml down -v
            docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up -d cassandra
            echo -n "Wait for C* "
            until docker exec scalardl-samples-cassandra-1 cqlsh 2> /dev/null ; do
              sleep 0.5
              echo -n "#"
            done
            echo ""
            docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up scalardl-ledger-schema-loader-cassandra
            docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up scalardl-auditor-schema-loader-cassandra
            docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up -d scalar-ledger
            docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up -d scalar-auditor
            docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up -d ledger-envoy
            docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up -d auditor-envoy
            docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up -d scalar-ledger-as-client
            docker-compose -f docker-compose.yml -f docker-compose-auditor.yml up -d scalar-audior-as-client
            sleep 5
            docker restart scalardl-samples-scalar-ledger-1 # just in case
            docker restart scalardl-samples-scalar-auditor-1 # just in case
            sleep 5
          working_directory: .circleci/

      # run tests with auditor
      - run:
          command: npm run test-auditor

      - store_test_results:
          path: ~/scalardl-web-client-sdk/test/test-reports

      - store_artifacts:
          path: ~/scalardl-web-client-sdk/test/test-reports
  deploy:
    docker:
      #Node LTS 14.16 "fermium"
      - image: circleci/node:14.16
    steps:
      - checkout
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      - run:
          name: Publish package
          command: npm publish --access public

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          context: "scalar"
          filters: # required since `deploy` has tag filters AND requires `build`
            tags:
              only: /.*/
      - deploy:
          context: "scalar"
          requires:
            - build
          filters:
            tags:
              only: /v[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
